import asyncio
import subprocess
import os
import re
from telegram import Bot
from telegram.constants import ParseMode
from dotenv import load_dotenv


async def main():
    load_dotenv(os.path.expanduser("~/.env"))
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    bot = Bot(token=BOT_TOKEN)

    tg_url = input("–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–º—É –≤ –∫–∞–Ω–∞–ª–µ (–≤–∏–¥–∞ https://t.me/c/...): ").strip()
    try:
        chat_id, thread_id = parse_telegram_topic_url(tg_url)
        print(f"‚úÖ –ß–∞—Ç ID: {chat_id}, –¢–æ–ø–∏–∫ ID: {thread_id}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        return

    await bot.send_message(
        chat_id=chat_id,
        message_thread_id=thread_id,
        text="üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–≤–æ–µ–≥–æ –∫—Ä—É—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞."
    )



# === –§–£–ù–ö–¶–ò–ò ===

def parse_telegram_topic_url(url):
    """
    –ü–∞—Ä—Å–∏–º —Å—Å—ã–ª–∫—É –≤–∏–¥–∞ https://t.me/c/CHAT_ID/THREAD_PARENT/THREAD_ID
    """
    match = re.match(r"https://t\.me/c/(-?\d+)/(\d+)(?:/(\d+))?", url)
    if not match:
        raise ValueError("–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞. –ü—Ä–∏–º–µ—Ä: https://t.me/c/1756893672/12759/12789")
    
    chat_id = int(f"-100{match.group(1)}")
    message_thread_id = int(match.group(2))
    return chat_id, message_thread_id

def transcode_m3u8(url, output_file):
    print(f"[*] –ü–µ—Ä–µ–∂–∏–º–∞–µ–º: {url}")
    ffmpeg_command = [
        FFMPEG_PATH,
        "-i", url,
        "-c:v", "libx264",
        "-preset", "veryfast",
        "-crf", "23",
        "-c:a", "aac",
        "-b:a", "128k",
        "-movflags", "+faststart",
        output_file
    ]

    result = subprocess.run(ffmpeg_command)
    if result.returncode != 0:
        raise RuntimeError("FFmpeg –∑–∞—Ñ–µ–π–ª–∏–ª—Å—è üòµ")

def send_to_telegram(bot, chat_id, thread_id, video_path, caption=None):
    print("[*] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º...")
    with open(video_path, 'rb') as video:
        bot.send_video(
            chat_id=chat_id,
            video=video,
            supports_streaming=True,
            message_thread_id=thread_id,
            caption=caption,
            parse_mode=ParseMode.HTML
        )
    print("[+] –ì–æ—Ç–æ–≤–æ! üéâ")

# === –ì–õ–ê–í–ù–ê–Ø ===

def main2():
    bot = Bot(token=BOT_TOKEN)

    # 1. –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–º—É –≤ –∫–∞–Ω–∞–ª–µ
    tg_url = input("–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–º—É –≤ –∫–∞–Ω–∞–ª–µ (–≤–∏–¥–∞ https://t.me/c/...): ").strip()
    try:
        chat_id, thread_id = parse_telegram_topic_url(tg_url)
        print(f"‚úÖ –ß–∞—Ç ID: {chat_id}, –¢–æ–ø–∏–∫ ID: {thread_id}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        return

    print("\nüé¨ –í–≤–æ–¥–∏ m3u8 —Å—Å—ã–ª–∫–∏ + –∑–∞–≥–æ–ª–æ–≤–æ–∫ (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª). –ü–∏—à–∏ `exit` —á—Ç–æ–±—ã –≤—ã–π—Ç–∏.")
    print("–ü—Ä–∏–º–µ—Ä—ã:")
    print("https://site.com/video.m3u8 –ú–æ–π –∫—Ä—É—Ç–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫")
    print("https://site.com/video2.m3u8\n")

    while True:
        line = input("üëâ ").strip()
        if line.lower() in ["exit", "quit"]:
            break
        if not line:
            continue

        try:
            parts = line.split(maxsplit=1)
            url = parts[0]
            title = parts[1] if len(parts) > 1 else None

            transcode_m3u8(url, TEMP_FILE)
            send_to_telegram(bot, chat_id, thread_id, TEMP_FILE, caption=title)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            if os.path.exists(TEMP_FILE):
                os.remove(TEMP_FILE)
                print("[*] –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª—ë–Ω üßπ")


asyncio.run(main())